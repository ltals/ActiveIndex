---
title: "EconPrelim"
format: html
editor: visual
---



```{r}
library(tidyquant)
library(tidyr)
library(fredr)
library(purrr)
library(ggplot2)
library(rvest)
library(readxl)
options(scipen=999)
library(jsonlite)
library(tidyverse)
library(lubridate)
library(plotly)

plotFun <- function(longdf){
  plot <- plotly::ggplotly(longdf %>% 
  ggplot(aes(x = date, y = value, col = series_id)) + geom_line())
  
  return(plot)
}
```


```{r}

energy_series = c("IYE", "CL=F", "NG=F")

energy <- tidyquant::tq_get(energy_series,
                            get = "stock.prices", 
                            from = "2015-01-01", 
                            to = Sys.Date()) %>% 
  dplyr::select(date, symbol, adjusted) %>% 
  pivot_wider(names_from = symbol, values_from = adjusted) %>% 
  dplyr::mutate(IYE_del = (IYE / dplyr::lag(IYE)) -1)

names(energy)[3] = "crude"
names(energy)[4] = "natgas"

energy <- energy %>% 
  dplyr::mutate(crude_del = (crude / dplyr::lag(crude)) - 1, 
                natgas_del = (natgas / dplyr::lag(natgas)) -1) %>% 
  na.omit()

energy_model <- lm(IYE_del ~ crude_del + natgas_del, data = energy)

summary(energy_model)
```

```{r}
fredr_series(
  series_id = "UNRATE",
  realtime_start = as.Date("1950-01-01")
)


fredr_endpoints

fredr_series_vintagedates(series_id = "DGORDER")
# 
# https://api.stlouisfed.org/fred/release/dates?release_id=82&api_key=abcdefghijklmnopqrstuvwxyz123456
# 
# # base sheet
# 
# https://api.stlouisfed.org/fred/releases?api_key=d1ddfc3727527d3ca0b0ddebd7e9dade
# 
# # "DGORDER"
# https://api.stlouisfed.org/fred/release/dates?release_id=95&api_key=d1ddfc3727527d3ca0b0ddebd7e9dade&file_type=json
# 
# # "UMCSENT"
# https://api.stlouisfed.org/fred/release/dates?release_id=91&api_key=d1ddfc3727527d3ca0b0ddebd7e9dade&file_type=json
# 
# # "PERMITS
# https://api.stlouisfed.org/fred/release/dates?release_id=148&api_key=d1ddfc3727527d3ca0b0ddebd7e9dade&file_type=json
# 
# # GDP
# https://api.stlouisfed.org/fred/release/dates?release_id=53&api_key=d1ddfc3727527d3ca0b0ddebd7e9dade&file_type=json

# # PCE
# https://api.stlouisfed.org/fred/release/dates?release_id=54&api_key=d1ddfc3727527d3ca0b0ddebd7e9dade&file_type=json



FREDrelease <- function(seriesID, apiKey, seriesName){
  fredUrl <- sprintf("https://api.stlouisfed.org/fred/release/dates?release_id=%s&api_key=%s&file_type=json",
                 seriesID, apiKey)

  Jdata <- fromJSON(fredUrl)

  seriesDf <- as.data.frame(Jdata$release_dates)
  
  seriesDf <- seriesDf %>%
    mutate(seriesName = seriesName)
  
  return(seriesDf)
}


gdpR <- FREDrelease(53, 'd1ddfc3727527d3ca0b0ddebd7e9dade', "GDP")

permitR <- FREDrelease(148, 'd1ddfc3727527d3ca0b0ddebd7e9dade', "PERMIT")

umcsentR <- FREDrelease(91, 'd1ddfc3727527d3ca0b0ddebd7e9dade', "UMCSENT")

dgorderR <- FREDrelease(95, 'd1ddfc3727527d3ca0b0ddebd7e9dade', "DGORDER")

rbind(gdpR, permitR, umcsentR, dgorderR) %>% 
  filter(date >= "2000-01-01")





leading_indicators <- c("UMCSENT", "DGORDER", "UNRATE", "PERMIT", "GDP", "PCE")
data_list = c()

for (series_id in leading_indicators) {
  series_data <- fredr_series_observations(series_id = series_id, 
                                           observation_start = as.Date("2000-01-01"), 
                                           observation_end = as.Date(Sys.Date()))
  data_list[[series_id]] <- series_data
}


  
combined_data <- do.call(rbind, data_list)




```



# Sector Dataframes

```{r}

# Energy
# nat gas & crude
energy_series = c("CL=F", "NG=F")

energy <- tidyquant::tq_get(energy_series,
                            get = "stock.prices", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>% 
  dplyr::select(date, symbol, adjusted) %>% 
  mutate(datRel = date + days(1)) %>% 
  mutate(value = adjusted,
         series_id = symbol)

plotFun(energy)

# Materials  
matSeries = c("HG=F", "GC=F", "PA=F", "SI=F")

materials <- tidyquant::tq_get(matSeries,
                            get = "stock.prices", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>% 
  dplyr::select(date, symbol, adjusted) %>% 
  mutate(dateRel = date + days(1)) %>% 
  mutate(value = adjusted) %>% 
  mutate(value = adjusted,
         series_id = symbol)

plotFun(materials)

```

```{r}

# Industrial

indSeries <- c("HOUST", "DGORDER")

"T10Y2Y"

industrials <- tidyquant::tq_get(indSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = case_when(series_id == "DGORDER" ~ date + months(1) - days(1),
                             series_id == "HOUST" ~ date + months(1) - days(1))) %>% 
  mutate(dateRel = case_when(series_id == "DGORDER" ~ date + months(3) - days(1),
                             series_id == "HOUST" ~ date + months(2) - days(1)))

plotFun(industrials)

gpr <- haven::read_dta('https://www.matteoiacoviello.com/gpr_files/data_gpr_export.dta')

refDate <- as.Date("1985-01-01")

gpr <- gpr %>% 
  select(month, GPR) %>% 
  drop_na() %>% 
  mutate(date = refDate %m+% months(month - 300)) %>% 
  select(date, value = GPR) %>% 
  mutate(series_id = "GPR") %>% 
  mutate(dateAdj = date + months(1) - days(1)) %>% 
  mutate(dateRel = date + months(1) + days(1))


industrials <- rbind(industrials, gpr)


plotFun(industrials)

# Consumer Discretinary


conDiscSeries <- c("UMCSENT", "DGORDER", "UNRATE", "PCE")

conDisc <- tidyquant::tq_get(conDiscSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>%
  mutate(dateAdj = case_when(series_id == "UMCSENT" ~ date + months(1) - days(1),
                             series_id == "DGORDER" ~ date + months(1) - days(1),
                             series_id == "UNRATE" ~ date + months(1) - days(1),
                             series_id == "PCE" ~ date + months(1) - days(1))) %>% 
  mutate(dateRel = case_when(series_id == "UMCSENT" ~ date + months(2) - days(1),
                             series_id == "DGORDER" ~ date + months(3) - days(1),
                             series_id == "UNRATE" ~ date + months(2) - days(1),
                             series_id == "PCE" ~ date + months(2) - days(1)))

plotFun(conDisc)

```


```{r}

# Consumer Staples

conStapSeries <- c("CPIAUCSL", "UNRATE")

conStap <- tidyquant::tq_get(conStapSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>%
  mutate(dateAdj = case_when(series_id == "CPIAUCSL" ~ date + months(1) - days(1),
                             series_id == "UNRATE" ~ date + months(1) - days(1))) %>% 
  mutate(dateRel = case_when(series_id == "CPIAUCSL" ~ date + months(2) - days(1),
                             series_id == "UNRATE" ~ date + months(2) - days(1)))

plotFun(conStap)
# Healthcare
# overall econ doing bad; limit losses

healthSeries <- c("CPIAUCSL", "UNRATE")

health <- tidyquant::tq_get(conStapSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>%
  mutate(dateAdj = case_when(series_id == "CPIAUCSL" ~ date + months(1) - days(1),
                             series_id == "UNRATE" ~ date + months(1) - days(1))) %>% 
  mutate(dateRel = case_when(series_id == "CPIAUCSL" ~ date + months(2) - days(1),
                             series_id == "UNRATE" ~ date + months(2) - days(1)))
plotFun(health)
```

```{r}

# Financials

finSeries <- c("HOUST", "TOTALSL", "DGS3MO")

financials <- tidyquant::tq_get(finSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = case_when(series_id == "TOTALSL" ~ date + months(1) - days(1),
                             series_id == "HOUST" ~ date + months(1) - days(1),
                             series_id == "DGS3MO" ~ date)) %>% 
  mutate(dateRel = case_when(series_id == "TOTALSL" ~ date + months(3) - days(1),
                             series_id == "HOUST" ~ date + months(2) - days(1),
                             series_id == "DGS3MO" ~ date + days(1)))

plotFun(financials)

# Information tech
itSeries <- c("DGS3MO")

it <- tidyquant::tq_get(itSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = date) %>% 
  mutate(dateRel = date + days(1))

plotFun(it)

```

```{r}

# Communications
comSeries <- c("DGS3MO")

com <- tidyquant::tq_get(itSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = date) %>% 
  mutate(dateRel = date + days(1))

plotFun(com)

# Utilities


utilSeries <- c("DGS3MO")

util <- tidyquant::tq_get(utilSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = date) %>% 
  mutate(dateRel = date + days(1))

```

```{r}

# Real estate

realestSeries <- c("USAUCSFRCONDOSMSAMID", "DGS3MO")

realestate <- tidyquant::tq_get(realestSeries,
                            get = "economic.data", 
                            from = "2000-01-01", 
                            to = Sys.Date()) %>%
  rename(series_id = symbol, value = price) %>% 
  mutate(dateAdj = case_when(series_id == "USAUCSFRCONDOSMSAMID" ~ date + months(1) - days(1),
                             series_id == "DGS3MO" ~ date)) %>% 
  mutate(dateRel = case_when(series_id == 'USAUCSFRCONDOSMSAMID' ~ date + months(2) - days(1),
                             series_id == "DGS3MO" ~ date + days(1)))



plotFun(realestate)


```


